import lib;
import sdl;

fn load_texture(renderer: &SDL_Renderer, path: string): &SDL_Texture {
    let loaded_surface: &SDL_Surface = IMG_Load(path);

    let new_texture = SDL_CreateTextureFromSurface(renderer, loaded_surface);

    SDL_FreeSurface(loaded_surface);

    return new_texture;
}

fn main() {
    let init = sdl_init(32);
    let window = sdl_create_window("Title", 805240832, 805240832, 1000, 1000, 32);
    let renderer = sdl_create_renderer(window, -1, 2);
    img_init(2);

    let texture = load_texture(renderer, "image.png");
    SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);

    printf("Texture %p\n", texture);

    while true {
        let event: SDL_Event;
        while sdl_poll_event(&event) != 0 {
            if event.type == 256 {
                printf("QUIT%d\n", event.type);
                sdl_quit();
                return;
            }
        }

        SDL_RenderClear(renderer);

        SDL_RenderCopy(renderer, texture, 0, 0);

        SDL_RenderPresent(renderer);
    }

    sdl_quit();
}